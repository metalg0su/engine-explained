
@startuml
autonumber 

actor Iconist

box "Breakfast..?" #ffaaaa
    participant RestService
end box

box "Peer" #aaffdd
    participant ChannelService
    participant ChannelTxCreator
    participant BroadcastScheduler
    participant ChannelInnerService
    participant BlockManager
'    participant ChannelStateMachine
end box

database ScoreService
entity PeerOuterService


== CREATE_TX == 
Iconist -> RestService: Entry point (../api/v3/)
RestService -> ScoreService: validation_transaction
RestService <-- ScoreService: response_to_json_query

RestService -> ChannelTxCreator: create_icx_tx
note over ChannelTxCreator: serialize, verify, pre_validate Tx
ChannelTxCreator -> BroadcastScheduler: comm: CREATE_TX
RestService <-- ChannelTxCreator: tx_hash with status code.

Iconist <-- RestService: response json result..

' Other peers
== VoteUnconfirmedBlock ==
loop number-of-audience
    BroadcastScheduler -> PeerOuterService: use gRPC. send request.block
    ... The Other Peers ...
    par parallel. in each peers..
        PeerOuterService --> ChannelInnerService: announce block
        ChannelInnerService -> BlockManager: unpacking block
'        BlockManager -[#red]-> ChannelStateMachine: change status. LATER!
        BlockManager -> BlockManager: vote_as_peer
        BlockManager -> ScoreService: something
        note left: invoke? validate?
        BlockManager -> BroadcastScheduler: comm: 'VoteUnconfirmedBlock'
        BroadcastScheduler -> PeerOuterService: Broadcast again to all
    end
end

PeerOuterService --> ChannelInnerService: receive VoteUnconfirmedBlock again
note over ChannelInnerService: LATER.. each peer counts VoteUnconfirmedBlock messages? Maybe.

== AnnounceUnconfirmedBlock ==

@enduml

