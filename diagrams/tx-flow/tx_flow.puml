@startuml

title Ultimate Tx-Flow (create_icx_tx)

' === Define participants
participant Iconist as user
participant IconScore as score

box icon-rpc-server
    participant RESTServer as rest
    participant IcxDispatcher as dispatcher
end box

box Loopchain
    participant ChannelTxCreator as tx_creator
    participant BroadcastScheduler as broadcaster
    participant TimerService as timer
end box

box tmp
    participant PeerOuterService as peer_outer
    participant ChannelTxReciever as tx_receiver
end box
' === Relations

' --- Request to icon-rpc-server
user -> rest: request (../api/v3/..)

rest -> dispatcher: method matched to \nicx_sendTransaction()
dispatcher -> score: validation_transaction()
score --> dispatcher: response_to_json_query

dispatcher -> tx_creator: create_icx_tx() (rabbitMQ)
tx_creator --> dispatcher: status_code, tx_hash
dispatcher -> rest: result

user <-- rest: response (json)

' --- loopchain
' Verify Tx
tx_creator -> tx_creator: serialize request to make tx
tx_creator -> tx_creator: verify tx
note over tx_creator
verify below
 - pre_verify: invalid nid
 - verify: verify_loosely
 - verify_loosely: hash, signature, is_unique_hash
end note
tx_creator -> tx_creator: pre_validate tx \n(time bound check)

' BroadcastScheduler
tx_creator -> broadcaster: schedules CREATE_TX job \n(tx, tx_versioner)
broadcaster -> broadcaster: store Tx in stored_tx
broadcaster -> timer: add timer to TimerService

broadcaster -> broadcaster: wait for more tx until duration is gone
...
timer --> broadcaster: end duration!
broadcaster -> peer_outer: AddTxList (gRPC call)

' --- Another Peer
peer_outer -> tx_receiver: pass request through add_tx_list()
tx_receiver -> tx_receiver: verify received Tx
note over tx_receiver
same steps to ChannelTxCreator:
 - pre_verify: invalid nid
 - verify: verify_loosely
 - verify_loosely: hash, signature, is_unique_hash
end note
tx_receiver -> tx_receiver: tx.size()
note right #red: ???

tx_receiver -> tx_receiver: push tx_list to queue
tx_receiver --> peer_outer: response code with message
peer_outer --> broadcaster: response code with message (rabbitMQ)
@enduml
