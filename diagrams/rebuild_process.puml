@startuml
' State definitions
|#FFAAAA|EvaluateNetwork|
|#AAAFFF|BlockSync|

' DB is empty
|#AFFAAA|Consensus(A)|
' DB is not empty
|#AFFAAA|Consensus(B)|

' Start
|EvaluateNetwork|
:Init Blockchain;
if (DB is not empty?) then (True)
    :Rebuild block;
endif

|BlockSync|
:Fast Sync;
:Exiting BlockSync;
if (is genesis) then (True)
    if (is LFT) then (True)
        (A)
        note right: LFT from DB
        detach
    else (False)
        |BlockSync|
        :Create genesis block;
        stop
        note: Siever
    endif

    |Consensus(B)|
    (B)
    note: LFT) DB exists
    partition "Set prev block" {
        :Commit block: last commit block;
    }
    partition "Set Validators" {
        :Validators: last commit block;
    }
    partition "Set Votes" {
        :Votes: None;
        note right: Receive through P2P
    }
    partition "Set Candidate Block" {
        if (me == leader) then (True)
            :Candidate block: I create;
        else
            :Candidate block: None;
            note right: Receive through P2P
        endif
    }
    stop
    note: InitializeEvent
else (False)
    |BlockSync|
    if (is LFT) then (True)
        (B)
        note right: LFT from Gensis
        detach
    else (False)
        |BlockSync|
        stop
        note: Siever
    endif
endif


|Consensus(A)|
(A)
note: LFT) DB not exists
:Create Genesis;
:Invoke Genesis;
partition "Set prev block" {
    :Commit block: Empty Hash;
}
partition "Set Candidate Block" {
    :Candidate block: Genesis;
}
stop
note: InitializeEvent
@enduml
